package edu.uoc.tdp.pac4.client.mantenimiento;

import edu.uoc.tdp.pac4.client.gestion.*;
import edu.uoc.tdp.pac4.beans.Aula;
import edu.uoc.tdp.pac4.beans.AuxiliarCombo;
import edu.uoc.tdp.pac4.beans.Recurso;
import edu.uoc.tdp.pac4.beans.Centro;
import edu.uoc.tdp.pac4.eAcademiaEU;
import edu.uoc.tdp.pac4.exceptions.GroupNotEmptyException;
import edu.uoc.tdp.pac4.remote.Mantenimiento;
import edu.uoc.tdp.pac4.util.ComboItem;
import edu.uoc.tdp.pac4.util.LanguageUtils;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**********************************************************************
 ******************** @author JavaBeginers - Cristian******************
 *********************************************************************/
public class PnlMantenimientoCentros extends javax.swing.JDialog 
{
    private Mantenimiento manager;
    private LanguageUtils language;
    private ArrayList<Centro> centros; 
    private boolean dofilter = false;

public PnlMantenimientoCentros(java.awt.Frame parent, boolean modal, Mantenimiento manager, LanguageUtils language) {
        super(parent, modal); 
        this.language       = language;
        this.manager        = manager;
        initComponents();
        setLocationRelativeTo(null);
        prepararTextos();
        setCombos();
        listarCentros();
      
}

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnClose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        fldNombre = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        btnFilter = new javax.swing.JButton();
        btnClearFilter = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        comboActivo = new javax.swing.JComboBox();
        lblActivos = new javax.swing.JLabel();
        comboUni = new javax.swing.JComboBox();
        lblUni = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jToolBar1.setRollover(true);

        btnClose.setText("Cerrar");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblData);

        btnAdd.setText("Nuevo");
        btnAdd.setFocusable(false);
        btnAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText("Editar");
        btnEdit.setFocusable(false);
        btnEdit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEdit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Eliminar");
        btnDelete.setFocusable(false);
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblNombre.setText("Nombre");

        btnFilter.setText("Filtrar");
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        btnClearFilter.setText("Reestablecer");
        btnClearFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFilterActionPerformed(evt);
            }
        });

        btnView.setText("Ver");
        btnView.setFocusable(false);
        btnView.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnView.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        lblActivos.setText("Activo");

        lblUni.setText("Universidad");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(0, 0, 0)
                        .addComponent(btnEdit)
                        .addGap(0, 0, 0)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnView)
                        .addGap(140, 140, 140)
                        .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblUni)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboUni, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(lblActivos, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboActivo, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(lblNombre)
                                .addGap(18, 18, 18)
                                .addComponent(fldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(btnClose))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnClearFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnAdd)
                        .addComponent(btnEdit)
                        .addComponent(btnDelete)
                        .addComponent(btnView)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombre)
                    .addComponent(comboActivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblActivos)
                    .addComponent(comboUni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUni))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFilter)
                    .addComponent(btnClearFilter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnClose)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//Establece los textos segun idioma seleccionado      
   private void prepararTextos() {
        this.setTitle(language.getProperty("mantenimiento.centros.Mantenimiento"));
        this.btnAdd.setText         (language.getProperty("mantenimiento.Nuevo"));
        this.btnEdit.setText        (language.getProperty("mantenimiento.Editar"));
        this.btnDelete.setText      (language.getProperty("mantenimiento.Eliminar"));
        this.btnView.setText     (language.getProperty("mantenimiento.Ver"));
        this.lblActivos.setText (language.getProperty("mantenimiento.recursos.Activos"));
        this.lblNombre.setText (language.getProperty("mantenimiento.recursos.Nombre"));
        this.lblUni.setText (language.getProperty("mantenimiento.usermain.universidad"));
                
        this.btnClose.setText       (language.getProperty("mantenimiento.Cerrar"));
        this.btnFilter.setText      (language.getProperty("mantenimiento.Filtrar"));
        this.btnClearFilter.setText (language.getProperty("mantenimiento.Restablecer")); 
        
        this.fldNombre.setText (""); 

    }
   
//Se escoge 'Alta de Centro'  
   private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
           PnlMantenimientoCentroGestor form = new PnlMantenimientoCentroGestor(null, true ,manager, language, "Add", 0);
           form.setLocationRelativeTo(null);
           form.setVisible(true);
           listarCentros();
   }//GEN-LAST:event_btnAddActionPerformed

//Se escoge 'Edición de Centro'     
   private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
      //No hay  fila seleccionada
      if (tblData.getSelectedRow() < 0)
      {
         JOptionPane.showMessageDialog(null,
                                       language.getProperty("mantenimiento.msg.NoCentro"),
                                       language.getProperty("app.title"),
                                       JOptionPane.WARNING_MESSAGE);
         return;
      }

      //Hay fila seleccionada:
      Centro cen = centros.get(tblData.getSelectedRow());
      PnlMantenimientoCentroGestor form = new PnlMantenimientoCentroGestor(null, true, manager, language, "Edit", cen.getId());
      form.setLocationRelativeTo(null);
      form.setVisible(true);
      listarCentros();
   }//GEN-LAST:event_btnEditActionPerformed

//Cerrar el Formulario
   private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
      this.dispose();
   }//GEN-LAST:event_btnCloseActionPerformed

//Se escoge Desactivar Centro
   private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
      //No hay fila seleccionada:
      if (tblData.getSelectedRow() < 0)
      {
         JOptionPane.showMessageDialog(null,
                                       language.getProperty("mantenimiento.msg.NoCentro"),
                                       language.getProperty("app.title"),
                                       JOptionPane.WARNING_MESSAGE);
         return;
      }
      
      //Hay fila seleccionada:
      
      Centro cen  = centros.get(tblData.getSelectedRow());
      Object[] options = {language.getProperty("mantenimiento.Si"), language.getProperty("mantenimiento.No")};
      
      int reply = JOptionPane.showOptionDialog(this, language.getProperty("mantenimiento.msg.EliminarCentro"),
                                               language.getProperty("app.title"), JOptionPane.YES_NO_OPTION, 
                                               JOptionPane.QUESTION_MESSAGE, null, options, cen);
      if (reply == 0) {
      try {
            manager.deleteCentro(cen.getId());

      }
      catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, 
                                          language.getProperty("err.sql") + "\n" + language.getProperty("err.detail") + ":\n\n" + ex.getMessage(), 
                                          language.getProperty("app.title"), 
                                          JOptionPane.ERROR_MESSAGE);
      }
      catch (Exception ex) {
            JOptionPane.showMessageDialog(null, 
                                          language.getProperty("err.rmi") + "\n" + language.getProperty("err.detail") + ":\n\n" + ex.getMessage(), 
                                          language.getProperty("app.title"), 
                                          JOptionPane.ERROR_MESSAGE);
      }
      
      listarCentros();
      }
   }//GEN-LAST:event_btnDeleteActionPerformed
   
//Botón Filtrar
    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
            this.dofilter = true;
            listarCentros();
    }//GEN-LAST:event_btnFilterActionPerformed

//Botón Limpiar Filtro
    private void btnClearFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFilterActionPerformed
        // TODO add your handling code here:
        this.fldNombre.setText("");
        this.comboActivo.setSelectedIndex(0);
        this.comboUni.setSelectedIndex(0);
        this.dofilter = false;
        listarCentros();
    }//GEN-LAST:event_btnClearFilterActionPerformed

//Consultar Recurso
    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // No hay fila seleccionada
      if (tblData.getSelectedRow() < 0)
      {
         JOptionPane.showMessageDialog(null,
                                       language.getProperty("mantenimiento.msg.NoCentro"),
                                       language.getProperty("app.title"),
                                       JOptionPane.WARNING_MESSAGE);
         return;
      }

      // Hay fila seleccionada:
      Centro cen = centros.get(tblData.getSelectedRow());

      PnlMantenimientoCentroGestor form = new PnlMantenimientoCentroGestor(null, true, manager, language, "Explore", cen.getId());
      form.setLocationRelativeTo(null);
      form.setVisible(true);
    }//GEN-LAST:event_btnViewActionPerformed

//Carga el Combo de los Centros
  private void setCombos() {
        comboUni.removeAll();
            comboUni.removeAll();
        List<AuxiliarCombo> universidades = new ArrayList<AuxiliarCombo>();
        try {
           universidades= manager.getUniversidades();
        } catch (Exception ex) {
            Logger.getLogger(PnlMantenimientoCentroGestor.class.getName()).log(Level.SEVERE, null, ex);
        }
        comboUni.addItem(new ComboItem(language.getProperty("mantenimiento.Todas"), 0));
        for(AuxiliarCombo universidad: universidades) {
        comboUni.addItem(new ComboItem(universidad.getNombre(),universidad.getId()));
        } 

        comboActivo.addItem(new ComboItem(language.getProperty("mantenimiento.Si"), 0));
        comboActivo.addItem(new ComboItem(language.getProperty("mantenimiento.No"), 1));
  
    }

//Cargar todos los Recursos
    private void todosCentros() throws SQLException, RemoteException, Exception {
        ArrayList<String> header = new ArrayList<String>();   // cabecera
      
        header.add(language.getProperty("mantenimiento.centros.Nombre"));
        header.add(language.getProperty("mantenimiento.centros.Poblacion"));
        header.add(language.getProperty("mantenimiento.centros.Telefono"));

        
        String[][] gridData;
        
        centros = manager.getCentros();
        
        gridData = new String[centros.size()][3];
        
        int i = 0;
        for (Centro centro: centros) {
            gridData[i][0] = centro.getNom();
            gridData[i][1] = centro.getPoblacio();
            gridData[i][2] = centro.getTelf();
            i++;
        }
        
        this.tblData.setModel(new javax.swing.table.DefaultTableModel(gridData, header.toArray())
            {@Override public boolean isCellEditable(int row, int column)
                { return false; } 
            });
    }
    
//Cargar Recursos Filtrados
    private void filtrarCentros() throws SQLException, RemoteException, Exception {
        ArrayList<String> header = new ArrayList<String>();   // cabecera
      
        header.add(language.getProperty("mantenimiento.centros.Nombre"));
        header.add(language.getProperty("mantenimiento.centros.Poblacion"));
        header.add(language.getProperty("mantenimiento.centros.Telefono"));

        String[][] gridData;
        if (comboActivo.getSelectedIndex()==0){
        centros = manager.getCentros();
        }else{
            centros=manager.getCentrosInactivos();
        }
        gridData = new String[centros.size()][3];
        int i = 0;
        for (Centro centro : centros) {
            if ( centro.getNom().contains(this.fldNombre.getText())) {
                if(comboUni.getSelectedIndex()==0){
            gridData[i][0] = centro.getNom();
            gridData[i][1] = centro.getPoblacio();
            gridData[i][2] = centro.getTelf();
            i++;
                } else{
                    if(centro.getUniversitat()==((ComboItem)comboUni.getSelectedItem()).getId()){
                            gridData[i][0] = centro.getNom();
                            gridData[i][1] = centro.getPoblacio();
                            gridData[i][2] = centro.getTelf();
                             i++;
                    }
                }
            }
        }
        
        this.tblData.setModel(new javax.swing.table.DefaultTableModel(gridData, header.toArray())
            {@Override public boolean isCellEditable(int row, int column)
                { return false; } 
            });
    }
 
//filtrar si el filtro esta activo. Mostrar todas en caso contrario
   private void listarCentros()
   {
      try {
            if(comboActivo.getSelectedIndex()==1){
                this.btnDelete.setEnabled(false);
                this.btnEdit.setEnabled(false);
            }else{
                this.btnDelete.setEnabled(true);
                this.btnEdit.setEnabled(true);  
            }
          if (!this.dofilter) {
              this.todosCentros();
              comboActivo.setSelectedIndex(0);
              comboUni.setSelectedIndex(0);
          }
          else {
              this.filtrarCentros();
          }
      } 
      catch (SQLException ex)
      {
         JOptionPane.showMessageDialog(null, 
                                       language.getProperty("err.sql") + "\n" + language.getProperty("err.detail") + ":\n\n" + ex.getMessage(), 
                                       language.getProperty("app.title"), 
                                       JOptionPane.ERROR_MESSAGE);
      }
      catch (RemoteException ex)
      {
         JOptionPane.showMessageDialog(null, 
                                       language.getProperty("err.rmi") + "\n" + language.getProperty("err.detail") + ":\n\n" + ex.getMessage(), 
                                       language.getProperty("app.title"), 
                                       JOptionPane.ERROR_MESSAGE);
      }
      catch (Exception ex) 
      {
         JOptionPane.showMessageDialog(null, 
                                       language.getProperty("err.generic") + "\n" + language.getProperty("err.detail") + ":\n\n" + ex.getMessage(), 
                                       language.getProperty("app.title"), 
                                       JOptionPane.ERROR_MESSAGE);
      }
   }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClearFilter;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox comboActivo;
    private javax.swing.JComboBox comboUni;
    private javax.swing.JTextField fldNombre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblActivos;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblUni;
    private javax.swing.JTable tblData;
    // End of variables declaration//GEN-END:variables
}
