package edu.uoc.tdp.pac4.client.mantenimiento;

import edu.uoc.tdp.pac4.beans.AuxiliarCombo;
import edu.uoc.tdp.pac4.beans.Usuario;
import edu.uoc.tdp.pac4.remote.Mantenimiento;
import edu.uoc.tdp.pac4.util.ComboItem;
import edu.uoc.tdp.pac4.util.LanguageUtils;
import edu.uoc.tdp.pac4.util.FieldLimit;

import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**********************************************************************
 ******************** @author JavaBeginers - Cristian******************
 *********************************************************************/
public class PnlMantenimientoUsuarioGestor extends javax.swing.JDialog 
{
    private Mantenimiento manager;
    private LanguageUtils language;

    private String ActionType;
    private Boolean reactivate = false;
   
    private Date now                    = new Date();
    private Usuario user                = null;
    SimpleDateFormat df                 = new SimpleDateFormat("dd/MM/yyyy");
    private int userID;
   
    private String ALUMNO_CODE = "rol.alumno";
    private int LOGIN_LENGTH   = 20;
    private int NAME_LENGTH    = 30;
    private int NIF_LENGTH     = 9;
    private int TELF_LENGTH    = 9;
    private int MAIL_LENGTH    = 30;
    private int SURN_LENGTH    = 29;
    
   
    /*************************Formulario Gestor Usuario*******************
    *********************Consulta, alta i mofificación de usuarios********
    *********************************************************************/
    public PnlMantenimientoUsuarioGestor(java.awt.Frame parent, boolean modal, Mantenimiento manager, LanguageUtils language, String ActionType, int userID) 
    {
        super(parent, modal);
        initComponents();
      
        setLocationRelativeTo(null);

        this.manager    = manager;
        this.language   = language;
        this.ActionType = ActionType;
        this.userID     = userID;
      
        prepararEtiquetas();
        
                //Adaptar el formulario a la opción de Alta, edicion o consulta
        if (this.ActionType.equalsIgnoreCase("Add")) {
            this.adaptarAlta();
        } else if (this.ActionType.equalsIgnoreCase("Edit")) {
            this.adaptarEdicion();
        } else if (this.ActionType.equalsIgnoreCase("Explore")) {
            this.adaptarConsulta();
        }

   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        cmdClose = new javax.swing.JButton();
        fldLogin = new javax.swing.JTextField();
        lblLogin = new javax.swing.JLabel();
        lblPwd = new javax.swing.JLabel();
        lblDate = new javax.swing.JLabel();
        lblDNI = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblSn1 = new javax.swing.JLabel();
        lblSn2 = new javax.swing.JLabel();
        lblTlf = new javax.swing.JLabel();
        lblMail = new javax.swing.JLabel();
        lblRol = new javax.swing.JLabel();
        fldPwd = new javax.swing.JTextField();
        fldDate = new javax.swing.JTextField();
        fldDNI = new javax.swing.JTextField();
        fldName = new javax.swing.JTextField();
        fldSn1 = new javax.swing.JTextField();
        fldSn2 = new javax.swing.JTextField();
        fldTlf = new javax.swing.JTextField();
        fldMail = new javax.swing.JTextField();
        cmdAccept = new javax.swing.JButton();
        comboPais = new javax.swing.JComboBox();
        lblPaisNIF = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        fldDireccion = new javax.swing.JTextField();
        fldPoblacion = new javax.swing.JTextField();
        lblPoblacion = new javax.swing.JLabel();
        fldCP = new javax.swing.JTextField();
        lblCP = new javax.swing.JLabel();
        comboPaisNIF = new javax.swing.JComboBox();
        lblPais = new javax.swing.JLabel();
        comboRol = new javax.swing.JComboBox();
        comboUni = new javax.swing.JComboBox();
        lblUni = new javax.swing.JLabel();
        comboIdioma = new javax.swing.JComboBox();
        lblIdioma = new javax.swing.JLabel();
        lblBaja = new javax.swing.JLabel();
        fldBaja = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jToolBar1.setRollover(true);

        cmdClose.setText("Cerrar");
        cmdClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCloseActionPerformed(evt);
            }
        });

        lblLogin.setText("login");

        lblPwd.setText("contraseña");

        lblDate.setText("fecha alta");

        lblDNI.setText("DNI");

        lblName.setText("nombre");

        lblSn1.setText("1º Apellido");

        lblSn2.setText("2º Apellido");

        lblTlf.setText("telefono");

        lblMail.setText("e-mail");

        lblRol.setText("Rol");

        cmdAccept.setText("Acceptar");
        cmdAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAcceptActionPerformed(evt);
            }
        });

        lblPaisNIF.setText("PaisNIF");

        lblDireccion.setText("Direccion");

        lblPoblacion.setText("Poblacion");

        lblCP.setText("CP");

        lblPais.setText("Pais");

        lblUni.setText("Universidad");

        lblIdioma.setText("Idioma");

        lblBaja.setText("fechaBaja");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(229, Short.MAX_VALUE)
                        .addComponent(cmdAccept)
                        .addGap(45, 45, 45)
                        .addComponent(cmdClose))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblUni)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboUni, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblPais)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboPais, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblLogin)
                                    .addComponent(lblPwd)
                                    .addComponent(lblName)
                                    .addComponent(lblSn1)
                                    .addComponent(lblTlf)
                                    .addComponent(lblDNI)
                                    .addComponent(lblPaisNIF)
                                    .addComponent(lblDireccion)
                                    .addComponent(lblPoblacion)
                                    .addComponent(lblSn2)
                                    .addComponent(lblCP)
                                    .addComponent(lblMail)
                                    .addComponent(lblRol))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(fldCP)
                                        .addComponent(fldLogin)
                                        .addComponent(fldPwd)
                                        .addComponent(fldName)
                                        .addComponent(fldSn1)
                                        .addComponent(fldSn2)
                                        .addComponent(fldTlf)
                                        .addComponent(fldDNI)
                                        .addComponent(fldDireccion)
                                        .addComponent(fldPoblacion)
                                        .addComponent(comboPaisNIF, 0, 166, Short.MAX_VALUE)
                                        .addComponent(fldMail))
                                    .addComponent(comboRol, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblIdioma)
                                    .addComponent(lblDate)
                                    .addComponent(lblBaja))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(comboIdioma, 0, 166, Short.MAX_VALUE)
                                    .addComponent(fldDate)
                                    .addComponent(fldBaja))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLogin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPwd)
                    .addComponent(fldPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblName)
                    .addComponent(fldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSn1)
                    .addComponent(fldSn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSn2)
                    .addComponent(fldSn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fldDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDNI))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPaisNIF)
                    .addComponent(comboPaisNIF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDireccion)
                    .addComponent(fldDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fldPoblacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPoblacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fldCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPais)
                    .addComponent(comboPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fldTlf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTlf))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fldMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRol))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboUni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUni))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboIdioma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIdioma))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDate)
                    .addComponent(fldDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fldBaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblBaja))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdClose)
                    .addComponent(cmdAccept))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   /**
    * Genera el {@link javax.swing.JComboBox} que permite escoger entre los distintos roles disponibles.
    * Captura los roles directamente desde la base de datos. Si no pudiera significa que algo no está
    * bien en las conexiones. Si es así emite eror y cierra el dialogo
    */

//Define el texto de las etiquetas en función del idioma seleccionado
    private void prepararEtiquetas() {
        /*
         * Definimos el texto de las labels del panel en función del idioma seleccionado
         */
        lblLogin.setText(language.getProperty("mantenimiento.usermain.login"));
        lblPwd.setText  (language.getProperty("mantenimiento.usermain.pswd"));
        lblName.setText (language.getProperty("mantenimiento.usermain.name"));
        lblSn1.setText  (language.getProperty("mantenimiento.usermain.surname1"));
        lblSn2.setText  (language.getProperty("mantenimiento.usermain.surname2"));
        lblDNI.setText  (language.getProperty("mantenimiento.usermain.DNI"));
        lblPaisNIF.setText(language.getProperty("mantenimiento.usermain.PaisNIF"));
        lblDireccion.setText(language.getProperty("mantenimiento.usermain.Direccion"));
        lblPoblacion.setText(language.getProperty("mantenimiento.usermain.Poblacion"));
        lblCP.setText(language.getProperty("mantenimiento.usermain.CP"));
        lblPais.setText(language.getProperty("mantenimiento.usermain.Pais"));
        lblTlf.setText  (language.getProperty("mantenimiento.usermain.telf"));
        lblMail.setText (language.getProperty("mantenimiento.usermain.mail"));
        lblRol.setText (language.getProperty("mantenimiento.usermain.rol"));
        lblUni.setText(language.getProperty("mantenimiento.usermain.universidad"));
        lblIdioma.setText(language.getProperty("mantenimiento.usermain.idioma"));
        lblDate.setText (language.getProperty("mantenimiento.usermain.date"));
        lblBaja.setText(language.getProperty("mantenimiento.usermain.baja"));
        
                // Set longitud campos
        this.fldLogin.setDocument(new FieldLimit(LOGIN_LENGTH));
        this.fldDNI.setDocument  (new FieldLimit(NIF_LENGTH));
        this.fldName.setDocument (new FieldLimit(NAME_LENGTH));
        this.fldSn1.setDocument  (new FieldLimit(SURN_LENGTH));
        this.fldSn2.setDocument  (new FieldLimit(SURN_LENGTH));
        this.fldTlf.setDocument  (new FieldLimit(TELF_LENGTH));
        this.fldMail.setDocument (new FieldLimit(MAIL_LENGTH));

        setCombos();

    }

//Prepara el formulario para Alta de Usuario    
    private void adaptarAlta(){
        
        this.setTitle(language.getProperty("mantenimiento.Nuevo") + " - " + 
                      language.getProperty("mantenimiento.main.user"));
       
 
       fldLogin.setText    ("");
       fldPwd.setText      ("");
       fldName.setText     ("");
       fldSn1.setText      ("");
       fldSn2.setText      ("");
       fldDNI.setText      ("");
       fldDireccion.setText      ("");
       fldPoblacion.setText      ("");
       fldCP.setText      ("");
       fldTlf.setText      ("");
       fldMail.setText     ("");
       fldDate.setText     (df.format(this.now));
       fldDate.setEditable (false);
       fldBaja.setVisible(false);
        this.fldBaja.setVisible(false);
        this.lblBaja.setVisible(false);
 
            
       this.cmdAccept.setText(language.getProperty("mantenimiento.usermain.newUser"));
       
    }
   
//Prepara el formulario para Edición de Usuario 
    private void adaptarEdicion(){
        
            this.setTitle(language.getProperty("mantenimiento.Editar") + " - " + 
                      language.getProperty("mantenimiento.main.user"));
       
        try {
            this.user = manager.getUsuario(this.userID);
   
       fldLogin.setText    (user.getLogin());
       fldPwd.setText      (user.getPwd());
       fldName.setText     (user.getNombre());
       fldSn1.setText      (user.getPrimerApellido());
       fldSn2.setText      (user.getSegundoApellido());
       fldDNI.setText      (user.getNif());
       fldDireccion.setText      (user.getAdreca());
       fldPoblacion.setText      (user.getPoblacio());
       fldCP.setText      (user.getCP());
       fldTlf.setText      (user.getTelf());
       fldMail.setText     (user.getEmail());
       fldDate.setText     (user.getFechaAlta().toString());
        if(user.getFechaInactividad()==null){
            this.fldBaja.setText ("");  
            }else{
            this.fldBaja.setText  (""+user.getFechaInactividad());
            }
       fldDate.setEditable (false);
       fldBaja.setVisible(false);
              this.fldBaja.setVisible(true);
        this.lblBaja.setVisible(true);
        this.fldBaja.setEditable(false);
       
            for (int i=0;i<comboIdioma.getItemCount();i++){
              if (user.getIdioma()==((ComboItem)comboIdioma.getItemAt(i)).getId())  {
                comboIdioma.setSelectedIndex(i);
              }
            } 
            
             for (int i=0;i<comboPais.getItemCount();i++){
              if (user.getPais()==((ComboItem)comboPais.getItemAt(i)).getId())  {
                comboPais.setSelectedIndex(i);
              }
            } 

             for (int i=0;i<comboPaisNIF.getItemCount();i++){
              if (user.getPaisNIF()==((ComboItem)comboPaisNIF.getItemAt(i)).getId())  {
                comboPaisNIF.setSelectedIndex(i);
              }
            }
              for (int i=0;i<comboRol.getItemCount();i++){
              if (user.getIdRol()==((ComboItem)comboRol.getItemAt(i)).getId())  {
                comboRol.setSelectedIndex(i);
              }
            }
              
              for (int i=0;i<comboUni.getItemCount();i++){
              if (user.getUniversidadId()==((ComboItem)comboUni.getItemAt(i)).getId())  {
                comboUni.setSelectedIndex(i);
              }
            }
    
        }
        catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, 
                                       language.getProperty("err.sql") + "\n" + language.getProperty("err.detail") + ":\n\n" + ex.getMessage(), 
                                       language.getProperty("app.title"), 
                                       JOptionPane.ERROR_MESSAGE);
         
        } 
        catch (Exception ex) {
                JOptionPane.showMessageDialog(null, 
                                       language.getProperty("err.generic") + "\n" + language.getProperty("err.detail") + ":\n\n" + ex.getMessage(), 
                                       language.getProperty("app.title"), 
                                       JOptionPane.ERROR_MESSAGE);

        }
           
        this.cmdAccept.setText(language.getProperty("mantenimiento.usermain.modUser"));       
    }

//Prepara el formulario para Consulta de Usuario  
    private void adaptarConsulta() {
        
        this.adaptarEdicion();
                
            this.setTitle(language.getProperty("mantenimiento.Ver") + " - " + 
                      language.getProperty("mantenimiento.main.user"));
        fldLogin.setEditable(false);
        fldPwd.setEditable  (false);
        fldDate.setEditable (false);
        fldDNI.setEditable  (false);
        fldName.setEditable (false);
        fldSn1.setEditable  (false);
        fldSn2.setEditable  (false);
        fldTlf.setEditable  (false);
        fldMail.setEditable  (false);
        fldCP.setEditable(false);
        fldPoblacion.setEditable(false);
        fldDireccion.setEditable(false);
        this.comboIdioma.setEnabled(false);
        this.comboPais.setEnabled(false);
        this.comboPaisNIF.setEnabled(false);
        this.comboRol.setEnabled(false);
        this.comboUni.setEnabled(false);
        this.cmdAccept.setVisible(false);
        this.fldBaja.setVisible(true);
        this.lblBaja.setVisible(true);
        this.fldBaja.setEditable(false);
        
    }

//Cerrar Formulario
   private void cmdCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCloseActionPerformed

    this.dispose();

   }//GEN-LAST:event_cmdCloseActionPerformed

//Guardar el nuevo usuario
    private void guardarNuevoUsuario() {
        try {
            if (this.reactivate) {

                JOptionPane.showMessageDialog(null, language.getProperty("mantenimiento.msg.add.olduse"),
                                              language.getProperty("app.title"), JOptionPane.INFORMATION_MESSAGE);
                manager.undeleteUsuario(this.userID);
                return;
            }

            Usuario usuario = new Usuario();
            
            usuario.setLogin     (this.fldLogin.getText());
            usuario.setPwd       (this.fldPwd.getText());
            usuario.setNombre    (this.fldName.getText());
            usuario.setApellidos (this.fldSn1.getText(), this.fldSn2.getText());
            usuario.setNif       (this.fldDNI.getText());
            usuario.setPaisNIF(((ComboItem)comboPaisNIF.getSelectedItem()).getId());
            usuario.setAdreca(this.fldDireccion.getText());
            usuario.setPoblacio(this.fldPoblacion.getText());
            usuario.setCP(this.fldCP.getText());
            usuario.setPais(((ComboItem)comboPais.getSelectedItem()).getId());
            usuario.setTelf      (this.fldTlf.getText());
            usuario.setEmail     (this.fldMail.getText());
            usuario.setIdRol(((ComboItem)comboRol.getSelectedItem()).getId());
            usuario.setUniversidadId(((ComboItem)comboUni.getSelectedItem()).getId());
            usuario.setIdioma(((ComboItem)comboIdioma.getSelectedItem()).getId());
            usuario.setFechaAlta (this.now);
                    
            if (manager.addUsuario(usuario)) {
                JOptionPane.showMessageDialog(null, language.getProperty("mantenimiento.msg.add.user"),
                                              language.getProperty("app.title"), JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            }
        }
        catch (SQLException ex) {
                 JOptionPane.showMessageDialog(null, 
                                               language.getProperty("err.sql") + "\n" + language.getProperty("err.detail") + ":\n\n" + ex.getMessage(), 
                                               language.getProperty("app.title"), 
                                               JOptionPane.ERROR_MESSAGE);
        }
        catch (Exception ex) {
                 JOptionPane.showMessageDialog(null, 
                                               language.getProperty("err.generic") + "\n" + language.getProperty("err.detail") + ":\n\n" + ex.getMessage(), 
                                               language.getProperty("app.title"), 
                                               JOptionPane.ERROR_MESSAGE);
        }
    }

//Guardar los cambios del usuario
    private void modificarUsuario() {
    
        try {
            
            Usuario usuario = new Usuario();
            
            usuario.setId        (this.userID);
            usuario.setLogin     (this.fldLogin.getText());
            usuario.setPwd       (this.fldPwd.getText());
            usuario.setNombre    (this.fldName.getText());
            usuario.setApellidos (this.fldSn1.getText(), this.fldSn2.getText());
            usuario.setNif       (this.fldDNI.getText());
            usuario.setPaisNIF(((ComboItem)comboPaisNIF.getSelectedItem()).getId());
            usuario.setAdreca(this.fldDireccion.getText());
            usuario.setPoblacio(this.fldPoblacion.getText());
            usuario.setCP(this.fldCP.getText());
            usuario.setPais(((ComboItem)comboPais.getSelectedItem()).getId());
            usuario.setTelf      (this.fldTlf.getText());
            usuario.setEmail     (this.fldMail.getText());
            usuario.setIdRol(((ComboItem)comboRol.getSelectedItem()).getId());
            usuario.setUniversidadId(((ComboItem)comboUni.getSelectedItem()).getId());
            usuario.setIdioma(((ComboItem)comboIdioma.getSelectedItem()).getId());
            usuario.setActivo    (this.user.isActivo());
            usuario.setFechaAlta(user.getFechaAlta());
            
         
        
                if (manager.updateUsuario(usuario)) {
                    JOptionPane.showMessageDialog(null, language.getProperty("mantenimiento.msg.modif"),
                                                  language.getProperty("app.title"), JOptionPane.INFORMATION_MESSAGE);
                }
            
            this.dispose();
        }
        catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, 
                                          language.getProperty("err.sql") + "\n" + language.getProperty("err.detail") + ":\n\n" + ex.getMessage(), 
                                          language.getProperty("app.title"), 
                                          JOptionPane.ERROR_MESSAGE);
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null, 
                                          language.getProperty("err.rmi") + "\n" + language.getProperty("err.detail") + ":\n\n" + ex.getMessage(), 
                                          language.getProperty("app.title"), 
                                          JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void cmdAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAcceptActionPerformed
        /*
         * Las acciones sólo se llevaran a cabo si tenemos TODOS los campos llenos
         */
        if (!this.CompruebaCampos()) {
            JOptionPane.showMessageDialog(null, 
                                          language.getProperty("mantenimiento.err.fields"), 
                                          language.getProperty("app.title"), 
                                          JOptionPane.ERROR_MESSAGE);
        } else {
            if(existeUsuario()){
                            JOptionPane.showMessageDialog(null, 
                                          language.getProperty("mantenimiento.err.UsuarioExiste"), 
                                          language.getProperty("app.title"), 
                                          JOptionPane.ERROR_MESSAGE);
            }else{
            if (this.ActionType.equalsIgnoreCase("Add")) {
                this.guardarNuevoUsuario();
            }
            else if (this.ActionType.equalsIgnoreCase("Edit")) {
                this.modificarUsuario();
            }
        }
    }//GEN-LAST:event_cmdAcceptActionPerformed
    }
    
        //Carga los distintos Combos
    private void setCombos() {
        comboPaisNIF.removeAll();
        List<AuxiliarCombo> paisesNIF = new ArrayList<AuxiliarCombo>();
        try {
            paisesNIF = manager.getPaises();
        } catch (Exception ex) {
            Logger.getLogger(PnlMantenimientoActividadGestor.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(AuxiliarCombo paisNIF: paisesNIF) {
        comboPaisNIF.addItem(new ComboItem(paisNIF.getNombre(),paisNIF.getId()));
        }  
        
        comboPais.removeAll();
        List<AuxiliarCombo> paises = new ArrayList<AuxiliarCombo>();
        try {
            paises = manager.getPaises();
        } catch (Exception ex) {
            Logger.getLogger(PnlMantenimientoActividadGestor.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(AuxiliarCombo pais: paises) {
        comboPais.addItem(new ComboItem(pais.getNombre(),pais.getId()));
        } 
        
        comboRol.removeAll();
        List<AuxiliarCombo> roles = new ArrayList<AuxiliarCombo>();
        try {
           roles = manager.getRoles();
        } catch (Exception ex) {
            Logger.getLogger(PnlMantenimientoActividadGestor.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(AuxiliarCombo rol: roles) {
        comboRol.addItem(new ComboItem(rol.getNombre(),rol.getId()));
        } 
        
        comboUni.removeAll();
        List<AuxiliarCombo> universidades = new ArrayList<AuxiliarCombo>();
        try {
           universidades= manager.getUniversidades();
        } catch (Exception ex) {
            Logger.getLogger(PnlMantenimientoActividadGestor.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(AuxiliarCombo universidad: universidades) {
        comboUni.addItem(new ComboItem(universidad.getNombre(),universidad.getId()));
        } 
        
        comboIdioma.removeAll();
        List<AuxiliarCombo> idiomas = new ArrayList<AuxiliarCombo>();
        try {
           idiomas= manager.getIdiomas();
        } catch (Exception ex) {
            Logger.getLogger(PnlMantenimientoActividadGestor.class.getName()).log(Level.SEVERE, null, ex);
        }
        for(AuxiliarCombo idioma: idiomas) {
        comboIdioma.addItem(new ComboItem(idioma.getNombre(),idioma.getId()));
        } 
    }

//Comprueba que los campos se han escrito correctamente
    private boolean CompruebaCampos() {

        if (fldLogin.getText().isEmpty() || fldLogin.getText().equals("")) {return false;}
        if (fldDNI.getText().isEmpty()   || fldDNI.getText().equals(""))   {return false;}
        if (fldName.getText().isEmpty()  || fldName.getText().equals(""))  {return false;}
        if (fldSn1.getText().isEmpty()   || fldSn1.getText().equals(""))   {return false;}
        if (fldSn2.getText().isEmpty()   || fldSn2.getText().equals(""))   {return false;}
        if (fldPwd.getText().isEmpty()   || fldPwd.getText().equals("")) {return false;}
        if (fldDNI.getText().isEmpty()   || fldDNI.getText().equals("")) {return false;}
        if (fldDireccion.getText().isEmpty()   || fldDireccion.getText().equals("")) {return false;}
        if (fldPoblacion.getText().isEmpty()   || fldPoblacion.getText().equals("")) {return false;}
        if (fldCP.getText().isEmpty()   || fldCP.getText().equals("")) {return false;}
        if (fldTlf.getText().isEmpty()   || fldTlf.getText().equals("")) {return false;}
        if (fldMail.getText().isEmpty()   || fldMail.getText().equals("")) {return false;}        
        return true;
    }
    
        private boolean existeUsuario() {
            try{
          if (this.ActionType.equalsIgnoreCase("Add")) {
           if(manager.existeUsuario(fldLogin.getText())>0){
               return true;
           }
        } else if (this.ActionType.equalsIgnoreCase("Edit")) {
           if(!(user.getLogin().equals(fldLogin.getText()) ) && manager.existeUsuario(fldLogin.getText())>0){
               return true;
           }
        } 
        
            }
        catch (SQLException ex) {
                 JOptionPane.showMessageDialog(null, 
                                               language.getProperty("err.sql") + "\n" + language.getProperty("err.detail") + ":\n\n" + ex.getMessage(), 
                                               language.getProperty("app.title"), 
                                               JOptionPane.ERROR_MESSAGE);
        }
        catch (Exception ex) {
                 JOptionPane.showMessageDialog(null, 
                                               language.getProperty("err.generic") + "\n" + language.getProperty("err.detail") + ":\n\n" + ex.getMessage(), 
                                               language.getProperty("app.title"), 
                                               JOptionPane.ERROR_MESSAGE);
        }
            return false;
        }
    
    
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdAccept;
    private javax.swing.JButton cmdClose;
    private javax.swing.JComboBox comboIdioma;
    private javax.swing.JComboBox comboPais;
    private javax.swing.JComboBox comboPaisNIF;
    private javax.swing.JComboBox comboRol;
    private javax.swing.JComboBox comboUni;
    private javax.swing.JTextField fldBaja;
    private javax.swing.JTextField fldCP;
    private javax.swing.JTextField fldDNI;
    private javax.swing.JTextField fldDate;
    private javax.swing.JTextField fldDireccion;
    private javax.swing.JTextField fldLogin;
    private javax.swing.JTextField fldMail;
    private javax.swing.JTextField fldName;
    private javax.swing.JTextField fldPoblacion;
    private javax.swing.JTextField fldPwd;
    private javax.swing.JTextField fldSn1;
    private javax.swing.JTextField fldSn2;
    private javax.swing.JTextField fldTlf;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblBaja;
    private javax.swing.JLabel lblCP;
    private javax.swing.JLabel lblDNI;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblIdioma;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblMail;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPais;
    private javax.swing.JLabel lblPaisNIF;
    private javax.swing.JLabel lblPoblacion;
    private javax.swing.JLabel lblPwd;
    private javax.swing.JLabel lblRol;
    private javax.swing.JLabel lblSn1;
    private javax.swing.JLabel lblSn2;
    private javax.swing.JLabel lblTlf;
    private javax.swing.JLabel lblUni;
    // End of variables declaration//GEN-END:variables
}
